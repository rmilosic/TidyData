?data.frame
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
?data.fram
?data.frame
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
complete("specdata")
?rbind
result <- data.frame("id", "nobs")
result
result <- data.frame()
result <- colnames("id", "nobs")
result <- data.frame()
result <- data.frame()
result <- colnames("id", "nobs")
result <- data.frame()
result <- data.frame(id, nobs)
result <- data.frame()
result <- data.frame()
?`data.frame-class`
?data.framež
?data.fram
?data.frame
result <- data_frame(row.names= c("id","nobs"))
result <- data.frame(row.names= c("id","nobs"))
View(result)
View(result)
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
result <- data.frame(id = numeric(), nobs= numeric())
result
data <- read.csv(file.path("specdata", "032.csv"))
complete <- sum(complete.cases(data[,2], data[,3]))
rbind(i,complete)
rbind(32,complete)
rbind(id=i, nobs=complete)
rbind(id=32, nobs=complete)
rbind(c(id=32, nobs=complete=)
rbind(c(id=32, nobs=complete)
rbind(id=32, nobs=complete))
rbind(c(id=32, nobs=complete))
source("complete.R")
complete("specdata")
result
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata")
?rbind
source("complete.R")
complete("specdata")
source("complete.R")
source("complete.R")
source("complete.R")
complete("specdata")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2,4,8,10,12))
complete("specdata", 30:25)
complete("specdata",3)
?cor
complete("specdata")
View(complete)
source("complete.R")
complete_obs <- complete("specdata",...)
complete_obs <- complete("specdata")
complete_obs <- complete("specdata")
source("complete.R")
complete_obs <- complete("specdata")
subset(complete_obs, nobs>117)
subset(complete_obs, nobs>300)
data_above_threshold <- subset(complete_obs, nobs > 300)
id_above_threshold <- data_above_threshold[,1]
?head
?summary
?corr
?cor
source("corr.R")
corr("specdata",150)
source("corr.R")
corr("specdata",150)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata",400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"]
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flags, sum(flag_colors))
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,
| 19:23]
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, $flags$landmass, summary)
tapply(flags$population, flags$landmass, summary)
exit()
library(swirl)
swirl()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
View(makeVector)
MakeVector(20)
View(makeVector)
View(makeVector)
makeVector(20)
makeVector$set
makeVector[1]$set
?solve
solve
UseMethod(solve)
view(UseMethod("solve"))
viewUseMethod("solve")
UseMethod("solve)
?matrix
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
data <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "housing.csv")
data <- read.table("housing.csv", header = TRUE)
str(data)
data <- read.table("housing.csv", header = TRUE, sep=",")
str(data)
data <- read.table("Getting and Cleaning Data/housing.csv", header = TRUE, sep=",")
data <- read.table("Getting and Cleaning Data/housing.csv", header = TRUE, sep=",")
str(data)
head(data)
data[,data$val == 24]
nrows(subset(data, data$VAL == 24))
nrow(subset(data, data$VAL == 24))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "gas.xlsx")
library(xlsx)
install.packages(xlsx)
install.packages("xlsx"")
install.packages("xlsx")
install.packages("xlsx")
library(xlsx)
library(xlsx)
library(xlsx)
library(swirld)
library(swirl)
swirl()
swirl()
swirl()
library(devtools)
install_github('viking/r-yaml')
install.packages('yaml')
install.packages("yaml")
swirl()
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -c(x:size))
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(x:size))
select(cran, -(x:size))
info()
select(cran, -(x:size))
select(cran, -(x:size))
select(cran, -(x:size))
select(cran, -(x:size))
select(cran, -(x:size))
select(cran, -(x:size))
cran
x:size
select(cran, -(x:size))
info()
skip()
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3,5,NA,100))
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size/ 2^20)
mutate(cran3, size_mb = size/ 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size+1000)
szummarize(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
library(swirl)
swil()
swirl()
library(dplyr)
cran <- tbl_df(cran)
cran <- tbl_df(mydf)
rm(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
view(top_counts)
View(top_counts)
top_counts_sorted <- arrange(pack_sum, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
vieW(top_counts_sorted)
VieW(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
?chain
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, ć)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, into = c("sex", class))
separate(res, sex_class, into = c("sex", "class"))
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
library(readr)
parse_number("class_5")
parse_number("class5")
submit()
?mutate
submit()
students4
submit()
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed < -mutate(failed, status = "failed")
failed <- mutate(failed, status = "failed")
?bind_rows
bind_rows(passed, failed)
sat
?select
?separate
submit()
submit()
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package=lubridate)
today()
this_day <- today()
class(today)
class(this_day)
this_day
year(this_day)
wday(this_day)
wday(this_day, label=T)
wday(this_day, label=TRUE)
now()
this_moment <- now()
this_moment
second(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
mdy(25081985)
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 43, seconds = 55)
this_moment <- update(this_moment, hours = 8, minutes = 43, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 12, minutes = 30)
this_moment
?now
now(tzone = "America/New_York")
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + day(2)
depart <- nyc + days(2)
depart
depart <- update(nyc, hours=17, minutes=34)
depart <- update(nyc, hour=17, minute=34)
depart <- update(depart, hours=17, minute=34)
depart <- update(depart, hours=17, minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrive
mdy("June 17 2008")
mdy("June 17 2008", tz="Singapore")
mdy("June 17, 2008", tz="Singapore")
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("C:/Users/rokmi/Documents/Coursera/Getting and Cleaning Data/Project")
source("run_analysis.r")
source("run_analysis.r")
View(head(merged_dataset))
View(head(x_test))
source("run_analysis.r")
View(head(merged_dataset))
merged_dataset_2 <- merge(merged_dataset, activity_labels, by.x="activity_class", by.y="V1", all = TRUE)
View(head(merged_dataset_2))
?match
library(dplyr)
?join
merged_dataset_2 <- join(merged_dataset, activity_labels, by=c("activity_class"= "V1"))
merged_dataset_2 <- left_join(merged_dataset, activity_labels, by=c("activity_class"= "V1"))
View(head(merged_dataset_2))
View(activity_labels)
View(head(merged_dataset_2 %>% select(-"activity_class")
))
View(head(merged_dataset_2 %>% select(-activity_class)))
View(subject_test)
names(y_test) <- "activity_class"
source("run_analysis.r")
View(head(merged_dataset))
?group_by
View(merged_dataset)
View(merged_dataset)
?summarize
source("run_analysis.r")
source("run_analysis.r")
View(grouped_dataset)
summarise(grouped_dataset, avg = mean())
?lapply
summarise_all(grouped_dataset, mean)
gsub
?gsub
summarised_dataset <- grouped_dataset %>% summarise_all(mean)
names(summarised_dataset) <- gsub("-|()|_", names(summarised_dataset), replacement = "")
View(summarised_dataset)
names(summarised_dataset) <- gsub("-|[()]|_", names(summarised_dataset), replacement = "")
source("run_analysis.r")
View(x_test)
View(x_train)
source("run_analysis.r")
